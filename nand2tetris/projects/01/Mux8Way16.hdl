// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux8Way16.hdl

/**
 * 8-way 16-bit multiplexor:
 * out = a if sel == 000
 *       b if sel == 001
 *       etc.
 *       h if sel == 111
 */

CHIP Mux8Way16 {
    IN a[16], b[16], c[16], d[16],
       e[16], f[16], g[16], h[16],
       sel[3];
    OUT out[16];

    PARTS:

    Mux4Way16(a=a, b=b, c=c, d=d, 
		sel[0]=sel[0], 
		sel[1]=sel[1],
		out=out0);

    Mux4Way16(a=e, b=f, c=g, d=h, 
		sel[0]=sel[0],
		sel[1]=sel[1], out=out1);
    
    Not(in=sel[2], out=notnewsel);

    And16(a=out0, b[0]=notnewsel, 
		  b[1]=notnewsel,
		  b[2]=notnewsel,
		  b[3]=notnewsel,
		  b[4]=notnewsel,
		  b[5]=notnewsel,
		  b[6]=notnewsel,
		  b[7]=notnewsel,
		  b[8]=notnewsel,
		  b[9]=notnewsel,
		  b[10]=notnewsel,
		  b[11]=notnewsel,
		  b[12]=notnewsel,
		  b[13]=notnewsel,
		  b[14]=notnewsel,
		  b[15]=notnewsel,
		  out=out2);

    And16(a=out1, b[0]=sel[2], 
		  b[1]=sel[2],
		  b[2]=sel[2],
		  b[3]=sel[2],
		  b[4]=sel[2],
		  b[5]=sel[2],
		  b[6]=sel[2],
		  b[7]=sel[2],
		  b[8]=sel[2],
		  b[9]=sel[2],
		  b[10]=sel[2],
		  b[11]=sel[2],
		  b[12]=sel[2],
		  b[13]=sel[2],
		  b[14]=sel[2],
		  b[15]=sel[2],
		  out=out3);


    Or16(a=out2, b=out3, out=out);
}
